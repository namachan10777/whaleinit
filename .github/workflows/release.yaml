name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-binary:
    name: Build binary
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        target: [x86_64, aarch64]
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}-unknown-linux-musl

      - uses: mlugg/setup-zig@v1

      - name: Install cargo-zigbuild
        run: cargo install cargo-zigbuild

      - name: Build ${{ matrix.target }} binary
        run: cargo zigbuild --release --target ${{ matrix.target }}-unknown-linux-musl

      - name: Prepare artifact
        run: |
          mkdir -p artifacts
          cp target/${{ matrix.target }}-unknown-linux-musl/release/whaleinit artifacts/whaleinit-${{ matrix.target }}-linux-musl
          cd artifacts
          sha256sum whaleinit-${{ matrix.target }}-linux-musl > whaleinit-${{ matrix.target }}-linux-musl.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.target }}-binary
          path: artifacts/whaleinit-${{ matrix.target }}-linux-musl*

  release:
    name: Create Release
    needs: build-binary
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download x86_64 artifact
        uses: actions/download-artifact@v4
        with:
          name: x86_64-binary
          path: artifacts

      - name: Download aarch64 artifact
        uses: actions/download-artifact@v4
        with:
          name: aarch64-binary
          path: artifacts

      - name: Create combined checksum file
        run: |
          cd artifacts
          cat *.sha256 > SHA256SUMS
          rm *.sha256

      - name: Get version from tag
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.VERSION }}
          files: |
            artifacts/whaleinit-x86_64-linux-musl
            artifacts/whaleinit-aarch64-linux-musl
            artifacts/SHA256SUMS
          draft: false
          prerelease: false
          generate_release_notes: true
